#!/bin/sh
############################################################################
export TS_USR_DIR
export TS_TMP_DIR
export TS_CLEANUP

use="usage: %s [-c] [-h] [-t TMPDIR] [TEST_FILES...]\n"
opt="       %s   %s\n"
while getopts "cht:x" option
do
  case $option in
  c  )  TS_CLEANUP=true ;;
  h  )  printf "$use" "$0"
        printf "$opt" "-c" "cleanup tmp dir on complete"
        printf "$opt" "-h" "prints this help"
        printf "$opt" "-t" "test tmp dir"
        exit 0 ;;
  t  )  TS_TMP_DIR=$OPTARG ;;
  \? )  printf "$use" "$0"
        exit 2 ;;
  esac
done
shift $(($OPTIND - 1))

if [ 0 -eq $# ]
then exit
fi

TS_USR_DIR="$(pwd)"
TS_TMP_DIR="${TS_TMP_DIR:-$TS_USR_DIR/tmp}"
TS_CLEANUP="${TS_CLEANUP:-false}"

############################################################################
# Check the input stream for output in the format:
#
#   [test/case:10] test_name
#   + true
#   P
#
# Partition failing output to $1, discard passing output.  Print to stdout '.'
# for passing tests and 'F' otherwise.
monitor () {
  sed -ne "
  /^\[/ b show
  H
  $ !b
  :show
  x

  s/F\$//p
  " | tr -d "\n"
}

# Abbreviate stdin by deleting xtrace lines using PS4="$PS4-"
untrace () {
  sed -e "
  /^${PS4:0:1}\{0,\}$PS4- /d
  /^${PS4}PS4='${PS4}- '/d
  "
}

############################################################################
# Make and expand TS_TMP_DIR
mkdir -p "$TS_TMP_DIR"
TS_TMP_DIR="$(cd "$TS_TMP_DIR" || exit 1; pwd)"

# Prepare log files


# Run the test files
npass=0
nfail=0
start=$SECONDS

grep -onEH "^ *test_\w+ +\(\)" "$@" | 
tr -d " ()" | 
tr ":" " "  | {

log="$TS_TMP_DIR/log"
log=/dev/null    # if -v

exec 3>&1
exec 4> "$log"
printf "\n" >&4

while read test_file lineno test_name
do
  out="$TS_TMP_DIR/$test_name.out"
  rm -f "$out"
  # exec 1> "$out"    # unless -v
  exec 2>/dev/null
  # exec 2>&1         # if -d 

  # run the test by calling back into the test file
  # * use stdout for progress, stderr for debug information
  # * a zero exit status is considered a pass, otherwise fail
  printf "[$test_file:$lineno:$test_name]\n"

  if "$test_file" "$test_name" "$lineno"
  then
    printf "." >&3
    ((npass++))
  else
    printf "F" >&3


    cat "$out"  >&4
    printf "\n" >&4

    ((nfail++))
  fi

  printf "\n"
done
exec 1>&3 3>&- 4>&-
end=$SECONDS

cat "$log"
printf "%s pass, %s fail, %s s\n" "$npass" "$nfail" "$(($end - $start))"
}

# Cleanup
# rm -f "$input" "$output" "$errors"

if [ "true" = "$TS_CLEANUP" ]
then rm -r "$TS_TMP_DIR"
fi
