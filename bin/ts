#!/bin/bash
############################################################################
export TS_USR_DIR
export TS_TMP_DIR

use="usage: %s [-c] [-d] [-f] [-h] [-m] [-p] [-t TMPDIR] [-v] [TEST_FILES...]\n"
opt="       %s   %s\n"
while getopts "cdfhpmt:v" option
do
  case $option in
  c  )  cleanup=true ;;
  d  )  debug=true ;;
  f  )  format=true ;;
  h  )  printf "$use" "$0"
        printf "$opt" "-c" "cleanup (rm -r) tmp dir on complete"
        printf "$opt" "-d" "debug mode - capture stderr for each test"
        printf "$opt" "-f" "format output with color and indentation"
        printf "$opt" "-h" "prints this help"
        printf "$opt" "-p" "preview the tests to be run"
        printf "$opt" "-m" "monitor progress"
        printf "$opt" "-t" "set the test tmp dir (default tmp)"
        printf "$opt" "-v" "verbose output"
        exit 0 ;;
  p  )  preview=true ;;
  m  )  monitor=true ;;
  t  )  TS_TMP_DIR=$OPTARG ;;
  v  )  verbose=true ;;
  \? )  printf "$use" "$0"
        exit 2 ;;
  esac
done
shift $(($OPTIND - 1))

TS_USR_DIR="$(pwd)"
TS_TMP_DIR="${TS_TMP_DIR:-$TS_USR_DIR/tmp}"
cleanup="${cleanup:-false}"
debug="${debug:-false}"
format="${format:-false}"
monitor="${monitor:-false}"
preview="${preview:-false}"
verbose="${verbose:-false}"

PASS=`echo -e '\033[32m'`
FAIL=`echo -e '\033[1;31m'`
NORM=`echo -e '\033[0m'`
NOEX=`echo -e '\033[1;37m'`

############################################################################
list () {
if [ $# -gt 0 ]
then
  grep -onEH "^ *test_\w+ +\(\)" "$@" |
  tr -d " ()" |
  tr ":" " "
fi
}

run () {
while read test_file lineno test_name
do
  if [ -x "$test_file" ]
  then
    # run the test by calling back into the test file
    # * use stdout for progress, stderr for debug information
    # * a zero exit status is considered a pass, otherwise fail
    if [ "true" = "$debug" ]
    then "$test_file" "$test_name" 2>&1
    else "$test_file" "$test_name" 2>/dev/null
    fi

    if [ 0 -eq $? ]
    then status=P
    else status=F
    fi
  else status=X
  fi

  printf "%% %s [%s:%s] %s\n" "$status" "$test_file" "$lineno" "$test_name"
done | tee "$1" |
sed -lne '
/^%/ {
1 !G
/^% P/a\
P
/^% F/a\
F
/^% X/a\
X
s/^% [PFX] //
s/\n//
p
c\

x
d
}
s/^/  /
H
'
}

noop () {
sed -l
}

monitor () {
sed -lne "
/^\[/ !{
H
$ !d
}
x
1 d

w $1
/P\$/a\\
.
/F\$/a\\
F
/X\$/a\\
-
\$ a\\
n
" | tr -ud "\n" | tr -u "n" "\n"
}

format () {
sed -lne "
/^\[/ !{
H
$ !d
}
x
1 p

/P\$/ s/^\[\([^]]*\)/[$PASS\1$NORM/
/F\$/ s/^\[\([^]]*\)/[$FAIL\1$NORM/
/X\$/ s/^\[\([^]]*\)/[$NOEX\1$NORM/
s/[PFX]\$//p
"
}

filter () {
sed -lne "
/^\[/ !{
H
$ !d
}
x
1 d
/P\$/ d
/^\[[^[]*\[32m/ d
s/^[^[]*//p
"
}
############################################################################

mkdir -p "$TS_TMP_DIR"
raw="$TS_TMP_DIR/raw"
tmp="$TS_TMP_DIR/tmp"
exitstatus=0

if [ "true" = "$preview" ]
then
  list "$@"
else
  start=$SECONDS
  list "$@" | run $raw |

  if [ "true" = "$monitor" ]
  then
    monitor "$tmp" >&2
    cat "$tmp"
  else noop
  fi |

  if [ "true" = "$format" ]
  then format
  else noop
  fi |

  if [ "true" = "$verbose" ]
  then noop
  else filter
  fi
  end=$SECONDS

  npass="$(grep -c '^% P' "$raw")"
  nfail="$(grep -c '^% F' "$raw")"
  nnoex="$(grep -c '^% X' "$raw")"
  printf "%s pass %s fail %s s\n" "$npass" "$(($nfail + $nnoex))" "$(($end - $start))" >&2

  [ "0" = "$(($nfail + $nnoex))" ]
  exitstatus=$?
fi

if [ "true" = "$cleanup" ]
then rm -r "$TS_TMP_DIR"
fi

exit $exitstatus
